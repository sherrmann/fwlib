name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y mingw-w64 cmake build-essential zip
        
    - name: Verify environment
      run: |
        cd examples/c
        chmod +x check-environment.sh build-windows.sh
        ./check-environment.sh
        
    - name: Build Windows executable
      run: |
        cd examples/c
        ./build-windows.sh
        
    - name: Run build verification
      run: |
        cd examples/c
        
        # Check executable exists and is correct format
        test -f build-windows/bin/fanuc_example.exe
        file build-windows/bin/fanuc_example.exe | grep -q "PE32"
        echo "✅ Windows executable built successfully"
        
        # Check DLLs exist
        test -f build-windows/bin/liblibconfig.dll
        echo "✅ Dependencies built successfully"
        
        # Check file sizes are reasonable
        exe_size=$(stat -c%s build-windows/bin/fanuc_example.exe)
        if [ $exe_size -gt 100000 ] && [ $exe_size -lt 1000000 ]; then
          echo "✅ Executable size is reasonable: $exe_size bytes"
        else
          echo "❌ Executable size is unexpected: $exe_size bytes"
          exit 1
        fi
        
    - name: Test package creation
      run: |
        cd examples/c
        
        # Create test package
        mkdir -p test-package
        cp build-windows/bin/fanuc_example.exe test-package/
        cp build-windows/bin/*.dll test-package/
        
        # Create test config
        echo 'ip = "192.168.1.100"' > test-package/config.cfg
        echo 'port = 8193' >> test-package/config.cfg
        
        # Verify package contents
        test -f test-package/fanuc_example.exe
        test -f test-package/liblibconfig.dll
        test -f test-package/config.cfg
        
        echo "✅ Package creation test passed"
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: fanuc-windows-build-${{ github.sha }}
        path: |
          examples/c/build-windows/bin/fanuc_example.exe
          examples/c/build-windows/bin/*.dll
        retention-days: 7
        
    - name: Report success
      run: |
        echo "🎉 CI build completed successfully!"
        echo "✅ Windows cross-compilation working"
        echo "✅ All build artifacts verified"
        echo "✅ Package creation tested"
